import{j as d}from"./jsx-runtime-B0wN4eWF.js";import{g as x}from"./index-CfoIBI3E.js";import{l as S,d as q}from"./constants-CJ-WDauL.js";import{T as y}from"./Task-BEm7IuJI.js";const k={skippedTasks:[],taskRuns:[]},B=({isSelectedTaskMatrix:T,onRetryChange:j,onSelect:A,selectedRetry:o,selectedStepId:E,selectedTaskId:a,selectedTaskRunName:t,skippedTasks:_=k.skippedTasks,taskRuns:i=k.taskRuns})=>{if(!i)return d.jsx("div",{});const f=i.filter(Boolean).find(s=>x(s).status==="False");let p=!1;return d.jsx("ol",{className:"tkn--task-tree",children:i.map((s,b)=>{if(!s)return null;const{uid:m,labels:h,name:u}=s.metadata,{[S.DASHBOARD_DISPLAY_NAME]:D,[S.PIPELINE_TASK]:e}=h;let r=s;o&&a===e&&(!t||u===t)&&(r={...r,status:r.status?.retriesStatus?.[o]});const c=x(r);let{reason:l}=c;const{status:g}=c,{steps:v}=r.status||{},n=!p&&(!a&&f?.metadata.uid===m||a===e&&(t?u===t:!0)||!f&&!a&&b===0);!p&&n&&(p=!0),!l&&_.find(P=>P.name===e)&&(l=q);const N=!a||T&&!t;return d.jsx(y,{displayName:D||e||u,expanded:n,id:e,onRetryChange:j,onSelect:A,reason:l,selectDefaultStep:N,selectedRetry:n&&o,selectedStepId:E,steps:v,succeeded:g,taskRun:s},m)})})};B.__docgenInfo={description:"",methods:[],displayName:"TaskTree",props:{skippedTasks:{defaultValue:{value:"[]",computed:!1},required:!1},taskRuns:{defaultValue:{value:"[]",computed:!1},required:!1}}};export{B as T};
